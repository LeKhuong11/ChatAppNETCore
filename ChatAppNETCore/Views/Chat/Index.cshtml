@using System.Security.Claims
@model List<ChatAppNETCore.Models.C_User>

@{
    ViewData["Title"] = "Chat screen";
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier).ToUpper();
}

@if (@TempData["SuccessMessage"] != null)
{
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.success('@TempData["SuccessMessage"]')
    </script>
}

<div class="chat-container">
    <div class="chat-list">
        <h3>Chat List</h3>
        <ul>
            @foreach (var user in Model)
            {
                <li class="chat-user" onclick="openChatRoom('@user.Id', '@user.Name', '@currentUserId')">@user.Name</li>
            }
        </ul>
    </div>

    <div class="chat-room">
        <h3 class="chat-with">Chat Room</h3>
        <div id="chat-content">
            
        </div>
        <input type="button" hidden id="sendButton" value="Send Message" />
    </div>
</div>


<script>
    var currentUserId = '@currentUserId';
</script>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>
 
<script type="text/javascript">
    function openChatRoom(userId, userName, currentUserId) {

        fetch('api/ChatApi/FindOrCreateChatRoom', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ UserId: userId }),
        }).then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
            .then(data => {
                const room = data.id;
                console.log(data)

                const chatContentDiv = document.getElementById('chat-content');
                const chatRoom = document.querySelector('.chat-room');

                // Clear Chat content (if any)
                chatContentDiv.innerHTML = '';

                if (!data.messages || data.messages.length === 0) {
                    chatContentDiv.innerHTML = 'Chưa có tin nhắn';
                } else {
                    const chatWith = document.querySelector('.chat-with');
                    chatWith.innerHTML = `Chat with ${userName}`;

                    // Add each message to chatContentDiv
                    data.messages.forEach(message => {
                        const messageElement = document.createElement('div');
                        messageElement.classList.add('chat-message');

                        messageElement.innerHTML = `
                            <div class="message ${message.senderId == currentUserId ? "sent-by-me" : ""}">
                                <p>${message.content}</p>
                                <span>${new Date(message.createdAt).toLocaleString()}</span>
                            </div>
                        `;

                        chatContentDiv.appendChild(messageElement);
                    });

                    // Scroll to the bottom
                    chatContentDiv.scrollTop = chatContentDiv.scrollHeight;
                }

                // HTML nhập tin nhắn
                chatRoom.innerHTML += `
                    <div class="message-input">
                        <input type="text" id="messageInput" placeholder="Type a message..." />
                        <button id="sendMessageButton" onclick="sendMessages(${data.chatRoom.id})">Send</button>
                    </div>
                `;

                joinRoom(data.chatRoom.id);
            })
    }

</script>

<style>
    .chat-container {
        display: flex;
        height: 80vh;
        border: 1px solid #ccc;
    }


    .chat-list {
        width: 30%;
        border-right: 1px solid #ccc;
        padding: 10px;
        background-color: #f8f9fa;
        overflow-y: auto;
    }

        .chat-list h3 {
            margin-top: 0;
            text-align: center;
            font-size: 1.5rem;
        }

        .chat-list ul {
            list-style-type: none;
            padding: 0;
        }

    .chat-user {
        padding: 10px;
        cursor: pointer;
        border-bottom: 1px solid #ccc;
    }

        .chat-user:hover {
            background-color: #e9ecef;
        }


    .chat-room {
        width: 70%;
        padding: 10px;
        display: flex;
        flex-direction: column;
    }

    .message {
        background-color: aliceblue;
        border-radius: 7px;
        padding: 5px 15px;
        width: fit-content;
        margin-bottom: 10px;
        max-width: 60%;
    }

        .message p {
            margin: 0;
        }

        .message span {
            font-size: 11px;
        }

    .sent-by-me {
        margin-left: auto;
        text-align: right;
    }

    .chat-room h3 {
        text-align: center;
        font-size: 1.5rem;
        margin-top: 0;
    }


    #chat-content {
        flex-grow: 1;
        padding: 10px;
        border: 1px solid #ccc;
        background-color: #fff;
        overflow-y: auto;
        max-height: 100%;
    }

    .user-joined {
        display: flex;
        justify-content: center;
    }

    .user-joined p {
        border-radius: 10px;
        padding: 4px 7px;
        background: #f6f6f6;
        font-size: 11px;
    }


    .message-input {
        display: flex;
        margin-top: 10px;
    }

        .message-input input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-right: 10px;
        }

        .message-input button {
            padding: 10px 20px;
            border: none;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            border-radius: 4px;
        }

            .message-input button:hover {
                background-color: #0056b3;
            }
</style>